---
import type { ParkSchema } from "@/types/park";
import Container from "@layouts/Container.astro";
import Layout from "@layouts/Layout.astro";
import Prose from "@layouts/Prose.astro";
import states from "@content/data/states/us-states-with-detail.json"

const response = await fetch('http://localhost:4321/api/parks.json');
const parks = await response.json();
const parksListSorted = parks.sort((a: ParkSchema, b: ParkSchema) => a.data.name.localeCompare(b.data.name));

---
<Layout>
  <div class="flex py-10 mx-auto max-w-screen-xl">
    <h1 class="text-3xl font-bold mt-6">National Parks List</h1>
  </div>

  <div class="grid grid-cols-6 pb-12 gap-4 mx-auto max-w-screen-xl">

    <div class="col-span-6">
      <h2 class="text-xl font-semibold mb-6">Parks by name</h2>

      <form action="#" class="my-6">
        <div class="pr-10">
          <label for="filter_form__parks" class="text-sm text-gray-600">Search by park name:</label><br>
          <input type="text" name="filter_form__parks" class="p-2 border-1 border-gray-300 rounded-sm w-full" placeholder="@park name" list="filter_form__parksList">
          {parksListSorted.length && (
            <datalist id="filter_form__parksList">
            {parksListSorted.map((park: ParkSchema) => {
              const url = "/parks/park/" + park.data.name?.replace(/\s+/g, '-').toLowerCase() as string;
              return (
                <option value={park.data.fullName}>{url}</option>
              )
            })}
            </datalist>
          )}
        </div>
      </form>

      <!-- {parksListSorted.length && (
        <ul class="columns-sm gap-4">
          {parksListSorted.map((park: ParkSchema) => {
            const url = "/parks/park/" + park.data.name?.replace(/\s+/g, '-').toLowerCase() as string;
            return (
              <li><a class="text-blue-500 hover:text-blue-700" href={url}>{park.data.fullName}</a></li>
            )
          })}
        </ul>
      )} -->
    </div>

    <div class="col-span-6 pb-12">
      <h2 class="text-xl font-semibold mb-6">States</h2>
      {states.states.length && (
        <ul class="columns-[12rem]">
          {states.states.map((state) => {
            const url = "/parks/state/" + state.abbreviation.toLowerCase() as string;
            return (
              <li><a class="text-blue-500 hover:text-blue-700" href={url}>{state.name}</a></li>
            )
          })}
        </ul>
      )}
    </div>

    <div class="col-span-6">
      <h2 class="text-xl font-semibold mb-6">Additional links</h2>
      <p class="col-span-full text-sm text-gray-600 dark:text-gray-400"><a href="/api/parks.json" target="_blank">View json data</a></p>
    </div>
  </div>
</Layout>


