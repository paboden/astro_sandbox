---
import type { ParkSchema } from "@/types/park";
import BackTo from "@components/Navigation/BackTo/BackTo.astro";
import Container from "@layouts/Container.astro";
import Layout from "@layouts/Layout.astro";
import Prose from "@layouts/Prose.astro";
import { getCollection, getEntry, type CollectionEntry } from "astro:content";
import type { GetStaticPaths } from 'astro';
import { getUsStateName } from '@lib/helpers'
import { Icon } from "astro-icon/components";

export const getStaticPaths = (async () => {
  const state_parks = await getCollection('parks_by_state');
  return state_parks.map((park) => ({
    params: { state_code: park.id },
    props: { park },
  }));
}) satisfies GetStaticPaths;

const { park } = Astro.props as { park: CollectionEntry<'parks_by_state'> };
const data = park.data?.data;
const id = park.id.toUpperCase() as string;
---
<Layout>
  <div class="flex mx-auto max-w-screen-xl">
    <header class="mb-8">
      <BackTo class="mt-3" href="/parks" title="Return to all parks list">Back to All Parks</BackTo>
      <hgroup class="flex flex-col gap-2 align-baseline my-8">
        <h1 class="text-3xl font-bold">National Parks List for {getUsStateName(id)}</h1>
        <p class="text-sm text-gray-600">{data?.length} total parks</p>
      </hgroup>
    </header>
  </div>

  <div class="mx-auto max-w-screen-xl">
    {data?.length && (
      <ul class="columns-xs mt-6 mb-12">
        {data.map((park) => {
          const url = "/parks/park/" + park?.name?.replace(/\s+/g, '-').toLowerCase() as string;
          return (
            <li class="mb-3"><a class="inline-flex items-center text-blue-500 hover:text-blue-700" href={url}>{park?.fullName} <Icon name="mdi:arrow-right" class="w-[2rem]"></Icon></a></li>
          )
        })}
      </ul>
    )}
  </div>
</Layout>
