---
import { getCollection, getEntries, type CollectionEntry } from 'astro:content';
import type { GetStaticPaths } from 'astro';
import Layout from "@layouts/Layout.astro";
import Heading from '@components/Base/Heading/Heading.astro';
import Prose from '@layouts/Prose.astro';
import Link from '@components/Base/Link/Link.astro';
import BackTo from '@components/Navigation/BackTo/BackTo.astro';
import { Image } from 'astro:assets';
import { Icon } from 'astro-icon/components';

export const getStaticPaths = (async () => {
  const allPosts = await getCollection('blog');
  return allPosts.map((post) => ({
    params: { 
      number: post.data.id,
      slug: post.data.title.replace(/\s+/g, '-').toLowerCase()
    },
    props: { post },
  }));
}) satisfies GetStaticPaths;

const { post } = Astro.props as { post: CollectionEntry<'blog'> };

const data = post.data;
const content = post.rendered?.html;

const authors = post.data.authors as CollectionEntry<'authors'>[];
const articleAuthors = await getEntries(authors);

const tags = post.data.tags as CollectionEntry<'blog_tags'>[];
const articleTags = await getEntries(tags);

const toc_headings = post.rendered?.metadata?.headings as Array<{ text: string; depth: number; slug: string }>;
const imagePath = data.image ? `/images/blog_images/${data.image}` : null;
---

<Layout title={post.data.title} class="max-w-screen-xl mx-auto mt-8" id="table-of-contents">

  {imagePath && (
    <Image slot="hero" src={imagePath} alt={post.data.title} width="800" height="300" class="mx-auto"/>
  )}

  <BackTo slot="sidebar" href="/blog" title="Return to all blog posts listing page" class="sticky top-0 pt-4">Back to Blog Posts</BackTo>

  {toc_headings && (
    <div slot="sidebar" class="my-2 sticky top-24 py-1 px-4 bg-gray-100 rounded-md">
      <Heading  as="h2" class="my-3 text-md">Table of Contents</Heading>
      <nav aria-labelledby="table-of-contents" class="mb-4">
        <span class="sr-only">Table of Contents</span>
        <ul class="list-none space-y-2 ml-0">
          {toc_headings.map((toc_heading: any) => (
            <li class="list-none items-center text-gray-800 dark:text-gray-200 text-sm" data-depth={toc_heading.depth}>
              <Link variant="link" href={`#${toc_heading.slug}`} class="no-underline hover:underline inline-flex items-center">
                {toc_heading.text}
              </Link>
            </li>
          ))}
          <li class="list-none items-center text-gray-800 dark:text-gray-200 text-sm mt-6 pt-6 border-t-1 border-gray-300">
            <Link variant="link" href="#tags-section" class="no-underline hover:underline inline-flex items-center">Topics</Link>
          </li>
          <li class="list-none items-center text-gray-800 dark:text-gray-200 text-sm mb-6 pb-6 border-b-1 border-gray-300">
            <Link variant="link" href="#authors-section" class="no-underline hover:underline inline-flex items-center">Meet the Author</Link>
          </li>
        </ul>
        <Link 
        variant="link" 
        href="#top"
        icon={{name: "mdi:arrow-up", class: "inline-flex items-center"}} 
        class="text-gray-600 dark:text-gray-300 no-underline hover:underline inline-flex items-center text-xs">
          Back to top
        </Link>
      </nav>
    </div> 
  )}
  
  <hgroup id="blog-header" class="mb-4"class="my-4">
    <Heading as="h1" >{post.data.title}</Heading>
    {data.summary && (<p class="lead mt-6">{data.summary}</p>)}
  </hgroup>

  <footer id="blog-meta" class="mb-4">

    {articleAuthors && (
      <p class="text-sm text-gray-500 dark:text-gray-400 mb-4">
        By
        {articleAuthors.map((author: any, index: number) => {
          const joining_text = (index + 1 !== articleAuthors.length) ? 'and' : '';
          return (
            <Link 
              variant="link" 
              href={`/blog/authors/${author.data.username}`} 
              class="no-underline hover:underline">
              {author.data.name}
            </Link>
            <>{joining_text}</>
          )
        })}
      </p> 
    )}

    {data.created &&  (
      <p class="text-sm text-gray-500 dark:text-gray-400 mb-4">
        Published on: {new Date(data.created).toLocaleDateString(undefined, { year: 'numeric', month: 'long', day: 'numeric' })}
      </p>
    )}

    {data.changed &&  (
      <p class="text-sm text-gray-500 dark:text-gray-400 mb-4">
        Last updated on: {new Date(data.changed).toLocaleDateString(undefined, { year: 'numeric', month: 'long', day: 'numeric' })}
      </p>
    )}
  </footer>

  <Prose class="border-t border-gray-300 dark:border-gray-700 mt-8 py-8">
    <Fragment set:html={content ?? "<p>No element found</p>"} />
  </Prose>

  {articleTags && (
    <div class="border-t border-gray-300 dark:border-gray-700 my-12">
      <Heading id="tags-section" as="h2" class="my-6">Post Topics</Heading>
      <ul>
        {articleTags?.map((tag) => {
          if (!tag.data) {
            return '';
          }
          return (
            <li id={tag.data.id} class="inline-flex items-center bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 rounded-full px-3 py-1 text-sm font-semibold mr-2 mb-2">
              <Link variant="link" href={`/blog/tags/${tag.data.id}`} icon={{name: "mdi:tag", class: "mr-1"}} class="no-underline hover:underline inline-flex items-center">
                {tag.data.name}
              </Link>
            </li>
          )
        })}
      </ul>
    </div> 
  )}

  {articleAuthors && (
    <div class="border-t border-gray-300 dark:border-gray-700 my-12">
      <Heading id="authors-section" as="h2" class="my-6">Meet the Author{articleAuthors.length >= 2 ? '(s)' : ''}</Heading>

      {articleAuthors.map((author, index: number) => {
        return (
          <div class="mt-4 pt-4 border-t-1 border-gray-300 border-dotted first-of-type:border-t-white first-of-type:mt-0 first-of-type:pt-0">
            <h3 class="text-lg font-bold">{author.data.name}</h3>
            <p class="text-sm text-gray-500 dark:text-gray-400 inline-flex items-center">@{author.data.username}</p>
            <p class="text-sm">{author.data?.short_bio}</p>
            <div class="flex mt-2">
              <Link 
                variant="primary" 
                href={`/blog/authors/${author.data.username}`} 
                class="text-xs text-gray-500 dark:text-gray-400 no-underline hover:underline inline-flex items-center">
                More by @{author.data.username}
              </Link>
            </div>
          </div>
        )
      })}
    </div>
  )}

</Layout>
