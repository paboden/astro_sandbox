---
import { getCollection, getEntries, type CollectionEntry } from 'astro:content';
import type { GetStaticPaths } from 'astro';
import Layout from "@layouts/Layout.astro";
import Heading from '@components/Base/Heading/Heading.astro';
import Prose from '@layouts/Prose.astro';
import Link from '@components/Base/Link/Link.astro';
import BackTo from '@components/Navigation/BackTo/BackTo.astro';

export const prerender = true;

export const getStaticPaths = (async () => {
  const allTags = await getCollection('blog_tags');
  return allTags.map((tag) => ({
    params: { 
      tag: tag.data.id.replace(/\s+/g, '-').toLowerCase()
    },
    props: { tag },
  }));
}) satisfies GetStaticPaths;

const { tag } = Astro.props as { tag: CollectionEntry<'blog_tags'> };

const data = tag.data;
const content = tag.rendered?.html;

const allPosts = await getCollection('blog');
const postsWithSpecificTag = [];
for (const post of allPosts) {
  post as CollectionEntry<'blog'>
  if (post.data.tags) {
    for (const tag of post.data.tags) {
      if (tag.id === data.id) {
        postsWithSpecificTag.push(post);
      }
    }
  }
}
---

<Layout title={tag.data.name} class="max-w-screen-xl mx-auto mt-8">

  <BackTo slot="sidebar" href="/blog/tags" title="Return to all blog authors listing page">Back to Tags</BackTo>

  {postsWithSpecificTag && (
    <div slot="sidebar" class="my-2 sticky top-24 py-2 px-4 bg-gray-100 rounded-md">
      <nav aria-label="Blog navigation" class="my-2">
        <span class="sr-only">Table of Contents</span>
        <ul class="list-none space-y-2 ml-0">
          <li class="list-none items-center text-gray-800 dark:text-gray-200 text-sm">
            <Link variant="link" href="/blog" class="no-underline hover:underline inline-flex items-center">All Posts</Link>
          </li>
          <li class="list-none items-center text-gray-800 dark:text-gray-200 text-sm">
            <Link variant="link" href="/blog/tags" class="no-underline hover:underline inline-flex items-center">All Topics</Link>
          </li>
          <li class="list-none items-center text-gray-800 dark:text-gray-200 text-sm">
            <Link variant="link" href="/blog/authors" class="no-underline hover:underline inline-flex items-center">All Authors</Link>
          </li>
        </ul>
      </nav>
    </div> 
  )}

  <hgroup class="">
    <p class="text-md text-gray-500 mb-2">Tag</p>
    <Heading as="h1" >{tag.data.name}</Heading>
  </hgroup>

  {data.description && (<p class="lead mt-6">{data.description}</p>)}
  <Prose class="mt-8">
    <Fragment set:html={content ?? "<p>No element found</p>"} />
  </Prose>

  {postsWithSpecificTag && (
    <section class="border-t border-gray-300 dark:border-gray-300 my-12">
      <Heading as="h2" class="my-6 text-lg">
        <>{postsWithSpecificTag.length}</> {postsWithSpecificTag.length >= 2 ? 'Articles' : 'Article'} with <span class="italic text-gray-600">{tag.data.name}</span> found.
      </Heading>
      <ul class="list-disc">
        {postsWithSpecificTag?.map((post) => {
          if (!post.data) {
            return '';
          }
          const slug = `/blog/${post.data.id}/${post.data.title.replace(/\s+/g, '-').toLowerCase()}`;
          const html_id = post.data.title.replace(/\s+/g, '-').toLowerCase();
          return (
            <li id={html_id} class="text-gray-800 dark:text-gray-200">
              <Link variant="link" href={slug} class="no-underline hover:underline">
                {post.data.title}
              </Link>
            </li>
          )
        })}
      </ul>
    </section> 
  )}

</Layout>