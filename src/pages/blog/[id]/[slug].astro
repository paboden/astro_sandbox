---
import { getCollection, type CollectionEntry } from 'astro:content';
import type { GetStaticPaths } from 'astro';
import Layout from "@layouts/Layout.astro" // Adjust path
import Heading from '@components/Base/Heading/Heading.astro';
import Prose from '@layouts/Prose.astro';
import Link from '@components/Base/Link/Link.astro';
import BackTo from '@components/Navigation/BackTo/BackTo.astro';
import { Image } from 'astro:assets';

export const getStaticPaths = (async () => {
  const allPosts = await getCollection('blog');
  return allPosts.map((post) => ({
    params: { 
      id: post.data.id,
      slug: post.data.title.replace(/\s+/g, '-').toLowerCase()
    },
    props: { post },
  }));
}) satisfies GetStaticPaths;

const { post } = Astro.props as { post: CollectionEntry<'blog'> };

const data = post.data;
const content = post.rendered?.html;
const headings = post.rendered?.metadata?.headings as Array<{ text: string; depth: number; slug: string }>;

const imagePath = data.image ? `/images/blog_images/${data.image}` : null;
---

<Layout title={post.data.title} class="max-w-screen-xl mx-auto mt-8">

  {imagePath && (
    <Image slot="hero" src={imagePath} alt={post.data.title} width="800" height="300" class="mx-auto"/>
  )}

  <BackTo slot="sidebar" href="/blog" title="Return to all blog posts listing page" class="my-8 sticky top-20 pt-4 bacon">Back to Blog Posts</BackTo>

  {headings && (
    <div slot="sidebar-alt" class="my-8 sticky top-20 pt-4">
      <Heading id="table-of-contents" as="h2" class="my-6 text-md">Table of Contents</Heading>
      <nav aria-labelledby="table-of-contents" class="mb-4">
        <span class="sr-only">Table of Contents</span>
        <ul class="list-none space-y-2 ml-0">
          {headings.map((heading: any) => (
            <li class="list-none items-center text-gray-800 dark:text-gray-200 text-sm" data-depth={heading.depth}>
              <Link variant="link" href={`#${heading.slug}`} class="no-underline hover:underline inline-flex items-center">
                {heading.text}
              </Link>
            </li>
          ))}
        </ul>
        <Link 
        variant="link" 
        href="#blog-header"
        icon={{name: "mdi:arrow-up", class: "inline-flex items-center"}} 
        class="text-gray-800 dark:text-gray-200 no-underline hover:underline inline-flex items-center text-sm mt-50">
          Back to top
        </Link>
      </nav>
    </div> 
  )}
  
  <hgroup id="blog-header" class="mb-4"class="my-4">
    <Heading as="h1" >{post.data.title}</Heading>
    {data.summary && (<p class="lead mt-6">{data.summary}</p>)}
  </hgroup>

  <footer id="blog-meta" class="mb-4">
    {data.author && (
      <p class="text-sm text-gray-500 dark:text-gray-400 mb-4">
        By <Link variant="link" href={`/blog/authors/${data.author}`} class="no-underline hover:underline inline-flex items-center">{data.author}</Link>
      </p> 
    )}

    {data.created &&  (
      <p class="text-sm text-gray-500 dark:text-gray-400 mb-4">
        Published on: {new Date(data.created).toLocaleDateString(undefined, { year: 'numeric', month: 'long', day: 'numeric' })}
      </p>
    )}

    {data.changed &&  (
      <p class="text-sm text-gray-500 dark:text-gray-400 mb-4">
        Last updated on: {new Date(data.changed).toLocaleDateString(undefined, { year: 'numeric', month: 'long', day: 'numeric' })}
      </p>
    )}
  </footer>

  <Prose class="border-t border-gray-300 dark:border-gray-700 mt-8 py-8">
    <Fragment set:html={content ?? "<p>No element found</p>"} />
  </Prose>

  {data.tags && (
    <div class="border-t border-gray-300 dark:border-gray-700 my-12">
      <Heading as="h2" class="my-6">Post Topics</Heading>
      <ul>
        {data.tags?.map((tag) => {
          const tag_slug = tag.replace(/\s+/g, '-').toLowerCase();
          return (
            <li id={tag} class="inline-flex items-center bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 rounded-full px-3 py-1 text-sm font-semibold mr-2 mb-2">
              <Link variant="link" href={`/blog/tags/${tag_slug}`} icon={{name: "mdi:tag", class: "mr-1"}} class="no-underline hover:underline inline-flex items-center">
                {tag}
              </Link>
            </li>
          )
        })}
      </ul>
    </div> 
  )}

  {data.author && (
    <div class="border-t border-gray-300 dark:border-gray-700 my-12">
      <Heading as="h2" class="my-6">About the Author</Heading>
      <p class="text-sm text-gray-500 dark:text-gray-400 mt-4">
        {data.author} articles go here.
      </p> 
    </div>
  )}

</Layout>